/**
 * GitHub v3 REST API
 *
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package jp.co.yumemi.android.code_check.data.models

import jp.co.yumemi.android.code_check.data.models.ReposOwnerRepoHooksHookIdConfigModel

import kotlinx.serialization.*

/**
 * 
 * @param config 
 * @param events Determines what [events](https://docs.github.com/webhooks/event-payloads) the hook is triggered for. This replaces the entire array of events.
 * @param addEvents Determines a list of events to be added to the list of events that the Hook triggers for.
 * @param removeEvents Determines a list of events to be removed from the list of events that the Hook triggers for.
 * @param active Determines if notifications are sent when the webhook is triggered. Set to `true` to send notifications.
 */
@Serializable
data class InlineObject92Model(
    @SerialName(value = "config")
    val config: ReposOwnerRepoHooksHookIdConfigModel? = null,
    /* Determines what [events](https://docs.github.com/webhooks/event-payloads) the hook is triggered for. This replaces the entire array of events. */
    @SerialName(value = "events")
    val events: kotlin.collections.List<kotlin.String>? = arrayListOf("push"),
    /* Determines a list of events to be added to the list of events that the Hook triggers for. */
    @SerialName(value = "add_events")
    val addEvents: kotlin.collections.List<kotlin.String>? = null,
    /* Determines a list of events to be removed from the list of events that the Hook triggers for. */
    @SerialName(value = "remove_events")
    val removeEvents: kotlin.collections.List<kotlin.String>? = null,
    /* Determines if notifications are sent when the webhook is triggered. Set to `true` to send notifications. */
    @SerialName(value = "active")
    val active: kotlin.Boolean? = true
) {

}

