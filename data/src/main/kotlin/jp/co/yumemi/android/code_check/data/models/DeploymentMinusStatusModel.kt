/**
 * GitHub v3 REST API
 *
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package jp.co.yumemi.android.code_check.data.models

import jp.co.yumemi.android.code_check.data.models.NullableMinusIntegrationModel
import jp.co.yumemi.android.code_check.data.models.NullableMinusSimpleMinusUserModel

import kotlinx.serialization.*
import kotlinx.serialization.descriptors.PrimitiveKind
import kotlinx.serialization.descriptors.PrimitiveSerialDescriptor
import kotlinx.serialization.descriptors.SerialDescriptor
import kotlinx.serialization.encoding.Decoder
import kotlinx.serialization.encoding.Encoder

/**
 * The status of a deployment.
 * @param url 
 * @param id 
 * @param nodeId 
 * @param state The state of the status.
 * @param creator 
 * @param description A short description of the status.
 * @param targetUrl Deprecated: the URL to associate with this status.
 * @param createdAt 
 * @param updatedAt 
 * @param deploymentUrl 
 * @param repositoryUrl 
 * @param environment The environment of the deployment that the status is for.
 * @param environmentUrl The URL for accessing your environment.
 * @param logUrl The URL to associate with this status.
 * @param performedViaGithubApp 
 */
@Serializable
data class DeploymentMinusStatusModel(
    @SerialName(value = "url")
    val url: kotlin.String,
    @SerialName(value = "id")
    val id: kotlin.Int,
    @SerialName(value = "node_id")
    val nodeId: kotlin.String,
    /* The state of the status. */
    @SerialName(value = "state")
    val state: DeploymentMinusStatusModel.State,
    @SerialName(value = "creator")
    val creator: NullableMinusSimpleMinusUserModel?,
    /* A short description of the status. */
    @SerialName(value = "description")
    val description: kotlin.String,
    /* Deprecated: the URL to associate with this status. */
    @Contextual @SerialName(value = "target_url")
    val targetUrl: kotlin.Any?,
    @SerialName(value = "created_at")
    val createdAt: kotlin.String,
    @SerialName(value = "updated_at")
    val updatedAt: kotlin.String,
    @SerialName(value = "deployment_url")
    val deploymentUrl: kotlin.String,
    @SerialName(value = "repository_url")
    val repositoryUrl: kotlin.String,
    /* The environment of the deployment that the status is for. */
    @SerialName(value = "environment")
    val environment: kotlin.String? = null,
    /* The URL for accessing your environment. */
    @SerialName(value = "environment_url")
    val environmentUrl: kotlin.String? = null,
    /* The URL to associate with this status. */
    @SerialName(value = "log_url")
    val logUrl: kotlin.String? = null,
    @SerialName(value = "performed_via_github_app")
    val performedViaGithubApp: NullableMinusIntegrationModel? = null
) {

    /**
     * The state of the status.
     * Values: error,failure,inactive,pending,success,queued,inProgress
     */
    @Serializable(with = State.Serializer::class)
    enum class State(val value: kotlin.String) {
        error("error"),
        failure("failure"),
        inactive("inactive"),
        pending("pending"),
        success("success"),
        queued("queued"),
        inProgress("in_progress");

        @kotlinx.serialization.Serializer(forClass = State::class)
        object Serializer {
            override fun deserialize(decoder: Decoder): State {
                val decoded = decoder.decodeString()
                return values().first { it.value == decoded }
            }

            override val descriptor: SerialDescriptor
                get() = PrimitiveSerialDescriptor(
                    "DeploymentMinusStatusModel.State.Serializer",
                    PrimitiveKind.STRING
                )

            override fun serialize(encoder: Encoder, value: State) {
                return encoder.encodeString(value.value)
            }
        }
    }
}

