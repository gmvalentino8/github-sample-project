/**
 * GitHub v3 REST API
 *
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package jp.co.yumemi.android.code_check.remote.apis

import io.ktor.client.request.request
import jp.co.yumemi.android.code_check.data.models.*
import jp.co.yumemi.android.code_check.remote.core.HttpClientProvider
import io.ktor.client.request.parameter
import io.ktor.http.HttpMethod

interface GitignoreApi {
    /**
    * Get all gitignore templates
    *
    * List all templates available to pass as an option when [creating a repository](https://docs.github.com/rest/reference/repos#create-a-repository-for-the-authenticated-user).
    *
    * @return kotlin.collections.List<kotlin.String>
    */
    suspend fun gitignoreGetAllTemplates(accessToken: String? = null): kotlin.collections.List<kotlin.String>

    /**
    * Get a gitignore template
    *
    * The API also allows fetching the source of a single template. Use the raw [media type](https://docs.github.com/rest/overview/media-types/) to get the raw contents.
    *
    * @return GitignoreMinusTemplateModel
    */
    suspend fun gitignoreGetTemplate(accessToken: String? = null, name: kotlin.String): GitignoreMinusTemplateModel

}

class HttpClientGitignoreApi(private val httpClientProvider: HttpClientProvider) : GitignoreApi {
    internal val httpClient = httpClientProvider.provide()

    override suspend fun gitignoreGetAllTemplates(accessToken: String?): kotlin.collections.List<kotlin.String> {
        val path = "/gitignore/templates"

        return httpClient.request {
            url { encodedPath = path }
            method = HttpMethod.Get
        }
    }

    override suspend fun gitignoreGetTemplate(accessToken: String?, name: kotlin.String): GitignoreMinusTemplateModel {
        val path = "/gitignore/templates/{name}".replace("{"+"name"+"}", "$name")

        return httpClient.request {
            url { encodedPath = path }
            method = HttpMethod.Get
        }
    }

}
