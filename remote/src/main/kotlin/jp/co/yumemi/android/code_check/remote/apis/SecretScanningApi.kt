/**
 * GitHub v3 REST API
 *
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package jp.co.yumemi.android.code_check.remote.apis

import io.ktor.client.request.request
import jp.co.yumemi.android.code_check.remote.models.*
import jp.co.yumemi.android.code_check.remote.core.HttpClientProvider
import io.ktor.client.request.parameter
import io.ktor.http.HttpMethod

interface SecretScanningApi {
    /**
    * Get a secret scanning alert
    *
    * Gets a single secret scanning alert detected in a private repository. To use this endpoint, you must be an administrator for the repository or organization, and you must use an access token with the &#x60;repo&#x60; scope or &#x60;security_events&#x60; scope.  GitHub Apps must have the &#x60;secret_scanning_alerts&#x60; read permission to use this endpoint.
    *
    * @return SecretMinusScanningMinusAlertApiModel
    */
    suspend fun secretScanningGetAlert(accessToken: String? = null, repoName: kotlin.String, alertNumber: kotlin.Int): SecretMinusScanningMinusAlertApiModel

    /**
    * List secret scanning alerts for an organization
    *
    * Lists secret scanning alerts for eligible repositories in an organization, from newest to oldest. To use this endpoint, you must be an administrator or security manager for the organization, and you must use an access token with the &#x60;repo&#x60; scope or &#x60;security_events&#x60; scope.  GitHub Apps must have the &#x60;secret_scanning_alerts&#x60; read permission to use this endpoint.
    *
    * @return kotlin.collections.List<OrganizationMinusSecretMinusScanningMinusAlertApiModel>
    */
    suspend fun secretScanningListAlertsForOrg(accessToken: String? = null, org: kotlin.String, state: kotlin.String? = null, secretType: kotlin.String? = null, resolution: kotlin.String? = null, page: kotlin.Int? = null, perPage: kotlin.Int? = null): kotlin.collections.List<OrganizationMinusSecretMinusScanningMinusAlertApiModel>

    /**
    * List secret scanning alerts for a repository
    *
    * Lists secret scanning alerts for a private repository, from newest to oldest. To use this endpoint, you must be an administrator for the repository or organization, and you must use an access token with the &#x60;repo&#x60; scope or &#x60;security_events&#x60; scope.  GitHub Apps must have the &#x60;secret_scanning_alerts&#x60; read permission to use this endpoint.
    *
    * @return kotlin.collections.List<SecretMinusScanningMinusAlertApiModel>
    */
    suspend fun secretScanningListAlertsForRepo(accessToken: String? = null, repoName: kotlin.String, state: kotlin.String? = null, secretType: kotlin.String? = null, resolution: kotlin.String? = null, page: kotlin.Int? = null, perPage: kotlin.Int? = null): kotlin.collections.List<SecretMinusScanningMinusAlertApiModel>

    /**
    * Update a secret scanning alert
    *
    * Updates the status of a secret scanning alert in a private repository. To use this endpoint, you must be an administrator for the repository or organization, and you must use an access token with the &#x60;repo&#x60; scope or &#x60;security_events&#x60; scope.  GitHub Apps must have the &#x60;secret_scanning_alerts&#x60; write permission to use this endpoint.
    *
    * @param request 
    * @return SecretMinusScanningMinusAlertApiModel
    */
    suspend fun secretScanningUpdateAlert(accessToken: String? = null, repoName: kotlin.String, alertNumber: kotlin.Int, request: InlineObject135ApiModel): SecretMinusScanningMinusAlertApiModel

}

class HttpClientSecretScanningApi(private val httpClientProvider: HttpClientProvider) : SecretScanningApi {
    internal val httpClient = httpClientProvider.provide()

    override suspend fun secretScanningGetAlert(accessToken: String?, repoName: kotlin.String, alertNumber: kotlin.Int): SecretMinusScanningMinusAlertApiModel {
        val path = "/repos/{repo_name}/secret-scanning/alerts/{alert_number}".replace("{"+"repo_name"+"}", "$repoName").replace("{"+"alert_number"+"}", "$alertNumber")

        return httpClient.request {
            url { encodedPath = path }
            method = HttpMethod.Get
        }
    }

    override suspend fun secretScanningListAlertsForOrg(accessToken: String?, org: kotlin.String, state: kotlin.String?, secretType: kotlin.String?, resolution: kotlin.String?, page: kotlin.Int?, perPage: kotlin.Int?): kotlin.collections.List<OrganizationMinusSecretMinusScanningMinusAlertApiModel> {
        val path = "/orgs/{org}/secret-scanning/alerts".replace("{"+"org"+"}", "$org")

        return httpClient.request {
            url { encodedPath = path }
            method = HttpMethod.Get
            parameter("state", state)
            parameter("secret_type", secretType)
            parameter("resolution", resolution)
            parameter("page", page)
            parameter("per_page", perPage)
        }
    }

    override suspend fun secretScanningListAlertsForRepo(accessToken: String?, repoName: kotlin.String, state: kotlin.String?, secretType: kotlin.String?, resolution: kotlin.String?, page: kotlin.Int?, perPage: kotlin.Int?): kotlin.collections.List<SecretMinusScanningMinusAlertApiModel> {
        val path = "/repos/{repo_name}/secret-scanning/alerts".replace("{"+"repo_name"+"}", "$repoName")

        return httpClient.request {
            url { encodedPath = path }
            method = HttpMethod.Get
            parameter("state", state)
            parameter("secret_type", secretType)
            parameter("resolution", resolution)
            parameter("page", page)
            parameter("per_page", perPage)
        }
    }

    override suspend fun secretScanningUpdateAlert(accessToken: String?, repoName: kotlin.String, alertNumber: kotlin.Int, request: InlineObject135ApiModel): SecretMinusScanningMinusAlertApiModel {
        val path = "/repos/{repo_name}/secret-scanning/alerts/{alert_number}".replace("{"+"repo_name"+"}", "$repoName").replace("{"+"alert_number"+"}", "$alertNumber")

        return httpClient.request {
            url { encodedPath = path }
            method = HttpMethod.Patch
            body = request
        }
    }

}
