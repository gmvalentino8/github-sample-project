/**
 * GitHub v3 REST API
 *
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package jp.co.yumemi.android.code_check.remote.models

import jp.co.yumemi.android.code_check.remote.models.MinimalMinusRepositoryApiModel
import jp.co.yumemi.android.code_check.remote.models.NullableMinusSimpleMinusCommitApiModel
import jp.co.yumemi.android.code_check.remote.models.PullMinusRequestMinusMinimalApiModel

import kotlinx.serialization.*

/**
 * An invocation of a workflow
 * @param id The ID of the workflow run.
 * @param nodeId 
 * @param headBranch 
 * @param headSha The SHA of the head commit that points to the version of the worflow being run.
 * @param runNumber The auto incrementing run number for the workflow run.
 * @param event 
 * @param status 
 * @param conclusion 
 * @param workflowId The ID of the parent workflow.
 * @param url The URL to the workflow run.
 * @param htmlUrl 
 * @param pullRequests 
 * @param createdAt 
 * @param updatedAt 
 * @param jobsUrl The URL to the jobs for the workflow run.
 * @param logsUrl The URL to download the logs for the workflow run.
 * @param checkSuiteUrl The URL to the associated check suite.
 * @param artifactsUrl The URL to the artifacts for the workflow run.
 * @param cancelUrl The URL to cancel the workflow run.
 * @param rerunUrl The URL to rerun the workflow run.
 * @param workflowUrl The URL to the workflow.
 * @param headCommit 
 * @param repository 
 * @param headRepository 
 * @param name The name of the workflow run.
 * @param checkSuiteId The ID of the associated check suite.
 * @param checkSuiteNodeId The node ID of the associated check suite.
 * @param runAttempt Attempt number of the run, 1 for first attempt and higher if the workflow was re-run.
 * @param runStartedAt The start time of the latest run. Resets on re-run.
 * @param previousAttemptUrl The URL to the previous attempted run of this workflow, if one exists.
 * @param headRepositoryId 
 */
@Serializable
data class WorkflowMinusRunApiModel(
    /* The ID of the workflow run. */
    @SerialName(value = "id")
    val id: kotlin.Int,
    @SerialName(value = "node_id")
    val nodeId: kotlin.String,
    @SerialName(value = "head_branch")
    val headBranch: kotlin.String?,
    /* The SHA of the head commit that points to the version of the worflow being run. */
    @SerialName(value = "head_sha")
    val headSha: kotlin.String,
    /* The auto incrementing run number for the workflow run. */
    @SerialName(value = "run_number")
    val runNumber: kotlin.Int,
    @SerialName(value = "event")
    val event: kotlin.String,
    @SerialName(value = "status")
    val status: kotlin.String?,
    @SerialName(value = "conclusion")
    val conclusion: kotlin.String?,
    /* The ID of the parent workflow. */
    @SerialName(value = "workflow_id")
    val workflowId: kotlin.Int,
    /* The URL to the workflow run. */
    @SerialName(value = "url")
    val url: kotlin.String,
    @SerialName(value = "html_url")
    val htmlUrl: kotlin.String,
    @SerialName(value = "pull_requests")
    val pullRequests: kotlin.collections.List<PullMinusRequestMinusMinimalApiModel>?,
    @SerialName(value = "created_at")
    val createdAt: kotlin.String,
    @SerialName(value = "updated_at")
    val updatedAt: kotlin.String,
    /* The URL to the jobs for the workflow run. */
    @SerialName(value = "jobs_url")
    val jobsUrl: kotlin.String,
    /* The URL to download the logs for the workflow run. */
    @SerialName(value = "logs_url")
    val logsUrl: kotlin.String,
    /* The URL to the associated check suite. */
    @SerialName(value = "check_suite_url")
    val checkSuiteUrl: kotlin.String,
    /* The URL to the artifacts for the workflow run. */
    @SerialName(value = "artifacts_url")
    val artifactsUrl: kotlin.String,
    /* The URL to cancel the workflow run. */
    @SerialName(value = "cancel_url")
    val cancelUrl: kotlin.String,
    /* The URL to rerun the workflow run. */
    @SerialName(value = "rerun_url")
    val rerunUrl: kotlin.String,
    /* The URL to the workflow. */
    @SerialName(value = "workflow_url")
    val workflowUrl: kotlin.String,
    @SerialName(value = "head_commit")
    val headCommit: NullableMinusSimpleMinusCommitApiModel?,
    @SerialName(value = "repository")
    val repository: MinimalMinusRepositoryApiModel,
    @SerialName(value = "head_repository")
    val headRepository: MinimalMinusRepositoryApiModel,
    /* The name of the workflow run. */
    @SerialName(value = "name")
    val name: kotlin.String? = null,
    /* The ID of the associated check suite. */
    @SerialName(value = "check_suite_id")
    val checkSuiteId: kotlin.Int? = null,
    /* The node ID of the associated check suite. */
    @SerialName(value = "check_suite_node_id")
    val checkSuiteNodeId: kotlin.String? = null,
    /* Attempt number of the run, 1 for first attempt and higher if the workflow was re-run. */
    @SerialName(value = "run_attempt")
    val runAttempt: kotlin.Int? = null,
    /* The start time of the latest run. Resets on re-run. */
    @SerialName(value = "run_started_at")
    val runStartedAt: kotlin.String? = null,
    /* The URL to the previous attempted run of this workflow, if one exists. */
    @SerialName(value = "previous_attempt_url")
    val previousAttemptUrl: kotlin.String? = null,
    @SerialName(value = "head_repository_id")
    val headRepositoryId: kotlin.Int? = null
) {

}

