/**
 * GitHub v3 REST API
 *
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package jp.co.yumemi.android.code_check.remote.models


import kotlinx.serialization.*
import kotlinx.serialization.descriptors.PrimitiveKind
import kotlinx.serialization.descriptors.PrimitiveSerialDescriptor
import kotlinx.serialization.descriptors.SerialDescriptor
import kotlinx.serialization.encoding.Decoder
import kotlinx.serialization.encoding.Encoder

/**
 * Secrets for GitHub Dependabot for an organization.
 * @param name The name of the secret.
 * @param createdAt 
 * @param updatedAt 
 * @param visibility Visibility of a secret
 * @param selectedRepositoriesUrl 
 */
@Serializable
data class OrganizationMinusDependabotMinusSecretApiModel(
    /* The name of the secret. */
    @SerialName(value = "name")
    val name: kotlin.String,
    @SerialName(value = "created_at")
    val createdAt: kotlin.String,
    @SerialName(value = "updated_at")
    val updatedAt: kotlin.String,
    /* Visibility of a secret */
    @SerialName(value = "visibility")
    val visibility: OrganizationMinusDependabotMinusSecretApiModel.Visibility,
    @SerialName(value = "selected_repositories_url")
    val selectedRepositoriesUrl: kotlin.String? = null
) {

    /**
     * Visibility of a secret
     * Values: all,`private`,selected
     */
    @Serializable(with = Visibility.Serializer::class)
    enum class Visibility(val value: kotlin.String) {
        all("all"),
        `private`("private"),
        selected("selected");

        @kotlinx.serialization.Serializer(forClass = Visibility::class)
        object Serializer {
            override fun deserialize(decoder: Decoder): Visibility {
                val decoded = decoder.decodeString()
                return values().first { it.value == decoded }
            }

            override val descriptor: SerialDescriptor
                get() = PrimitiveSerialDescriptor(
                    "OrganizationMinusDependabotMinusSecretApiModel.Visibility.Serializer",
                    PrimitiveKind.STRING
                )

            override fun serialize(encoder: Encoder, value: Visibility) {
                return encoder.encodeString(value.value)
            }
        }
    }
}

