/**
 * GitHub v3 REST API
 *
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package jp.co.yumemi.android.code_check.remote.models


import kotlinx.serialization.*
import kotlinx.serialization.descriptors.PrimitiveKind
import kotlinx.serialization.descriptors.PrimitiveSerialDescriptor
import kotlinx.serialization.descriptors.SerialDescriptor
import kotlinx.serialization.encoding.Decoder
import kotlinx.serialization.encoding.Encoder

/**
 * 
 * @param title The title of the milestone.
 * @param state The state of the milestone. Either `open` or `closed`.
 * @param description A description of the milestone.
 * @param dueOn The milestone due date. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.
 */
@Serializable
data class InlineObject113ApiModel(
    /* The title of the milestone. */
    @SerialName(value = "title")
    val title: kotlin.String,
    /* The state of the milestone. Either `open` or `closed`. */
    @SerialName(value = "state")
    val state: InlineObject113ApiModel.State? = State.`open`,
    /* A description of the milestone. */
    @SerialName(value = "description")
    val description: kotlin.String? = null,
    /* The milestone due date. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`. */
    @SerialName(value = "due_on")
    val dueOn: kotlin.String? = null
) {

    /**
     * The state of the milestone. Either `open` or `closed`.
     * Values: `open`,closed
     */
    @Serializable(with = State.Serializer::class)
    enum class State(val value: kotlin.String) {
        `open`("open"),
        closed("closed");

        @kotlinx.serialization.Serializer(forClass = State::class)
        object Serializer {
            override fun deserialize(decoder: Decoder): State {
                val decoded = decoder.decodeString()
                return values().first { it.value == decoded }
            }

            override val descriptor: SerialDescriptor
                get() = PrimitiveSerialDescriptor(
                    "InlineObject113ApiModel.State.Serializer",
                    PrimitiveKind.STRING
                )

            override fun serialize(encoder: Encoder, value: State) {
                return encoder.encodeString(value.value)
            }
        }
    }
}

