/**
 * GitHub v3 REST API
 *
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package jp.co.yumemi.android.code_check.remote.apis

import io.ktor.client.request.request
import jp.co.yumemi.android.code_check.remote.models.*
import jp.co.yumemi.android.code_check.remote.core.HttpClientProvider
import io.ktor.client.request.parameter
import io.ktor.http.HttpMethod

interface CodesOfConductApi {
    /**
    * Get all codes of conduct
    *
    * 
    *
    * @return kotlin.collections.List<CodeMinusOfMinusConductApiModel>
    */
    suspend fun codesOfConductGetAllCodesOfConduct(accessToken: String? = null): kotlin.collections.List<CodeMinusOfMinusConductApiModel>

    /**
    * Get a code of conduct
    *
    * 
    *
    * @return CodeMinusOfMinusConductApiModel
    */
    suspend fun codesOfConductGetConductCode(accessToken: String? = null, key: kotlin.String): CodeMinusOfMinusConductApiModel

}

class HttpClientCodesOfConductApi(private val httpClientProvider: HttpClientProvider) : CodesOfConductApi {
    internal val httpClient = httpClientProvider.provide()

    override suspend fun codesOfConductGetAllCodesOfConduct(accessToken: String?): kotlin.collections.List<CodeMinusOfMinusConductApiModel> {
        val path = "/codes_of_conduct"

        return httpClient.request {
            url { encodedPath = path }
            method = HttpMethod.Get
        }
    }

    override suspend fun codesOfConductGetConductCode(accessToken: String?, key: kotlin.String): CodeMinusOfMinusConductApiModel {
        val path = "/codes_of_conduct/{key}".replace("{"+"key"+"}", "$key")

        return httpClient.request {
            url { encodedPath = path }
            method = HttpMethod.Get
        }
    }

}
