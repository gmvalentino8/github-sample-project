/**
 * GitHub v3 REST API
 *
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package jp.co.yumemi.android.code_check.remote.apis

import io.ktor.client.request.request
import jp.co.yumemi.android.code_check.data.models.*
import jp.co.yumemi.android.code_check.remote.core.HttpClientProvider
import io.ktor.client.request.parameter
import io.ktor.http.HttpMethod

interface MarkdownApi {
    /**
    * Render a Markdown document
    *
    * 
    *
    * @param request 
    * @return kotlin.String
    */
    suspend fun markdownRender(accessToken: String? = null, request: InlineObject14Model): kotlin.String

    /**
    * Render a Markdown document in raw mode
    *
    * You must send Markdown as plain text (using a &#x60;Content-Type&#x60; header of &#x60;text/plain&#x60; or &#x60;text/x-markdown&#x60;) to this endpoint, rather than using JSON format. In raw mode, [GitHub Flavored Markdown](https://github.github.com/gfm/) is not supported and Markdown will be rendered in plain format like a README.md file. Markdown content must be 400 KB or less.
    *
    * @param request  (optional)
    * @return kotlin.String
    */
    suspend fun markdownRenderRaw(accessToken: String? = null, request: kotlin.String): kotlin.String

}

class HttpClientMarkdownApi(private val httpClientProvider: HttpClientProvider) : MarkdownApi {
    internal val httpClient = httpClientProvider.provide()

    override suspend fun markdownRender(accessToken: String?, request: InlineObject14Model): kotlin.String {
        val path = "/markdown"

        return httpClient.request {
            url { encodedPath = path }
            method = HttpMethod.Post
            body = request
        }
    }

    override suspend fun markdownRenderRaw(accessToken: String?, request: kotlin.String): kotlin.String {
        val path = "/markdown/raw"

        return httpClient.request {
            url { encodedPath = path }
            method = HttpMethod.Post
            body = request
        }
    }

}
