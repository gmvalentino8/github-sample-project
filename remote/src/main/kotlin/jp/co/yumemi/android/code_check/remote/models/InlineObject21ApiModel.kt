/**
 * GitHub v3 REST API
 *
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package jp.co.yumemi.android.code_check.remote.models


import kotlinx.serialization.*
import kotlinx.serialization.descriptors.PrimitiveKind
import kotlinx.serialization.descriptors.PrimitiveSerialDescriptor
import kotlinx.serialization.descriptors.SerialDescriptor
import kotlinx.serialization.encoding.Decoder
import kotlinx.serialization.encoding.Encoder

/**
 * 
 * @param name Name of the runner group.
 * @param visibility Visibility of a runner group. You can select all repositories, select individual repositories, or all private repositories. Can be one of: `all`, `selected`, or `private`.
 * @param allowsPublicRepositories Whether the runner group can be used by `public` repositories.
 */
@Serializable
data class InlineObject21ApiModel(
    /* Name of the runner group. */
    @SerialName(value = "name")
    val name: kotlin.String,
    /* Visibility of a runner group. You can select all repositories, select individual repositories, or all private repositories. Can be one of: `all`, `selected`, or `private`. */
    @SerialName(value = "visibility")
    val visibility: InlineObject21ApiModel.Visibility? = null,
    /* Whether the runner group can be used by `public` repositories. */
    @SerialName(value = "allows_public_repositories")
    val allowsPublicRepositories: kotlin.Boolean? = false
) {

    /**
     * Visibility of a runner group. You can select all repositories, select individual repositories, or all private repositories. Can be one of: `all`, `selected`, or `private`.
     * Values: selected,all,`private`
     */
    @Serializable(with = Visibility.Serializer::class)
    enum class Visibility(val value: kotlin.String) {
        selected("selected"),
        all("all"),
        `private`("private");

        @kotlinx.serialization.Serializer(forClass = Visibility::class)
        object Serializer {
            override fun deserialize(decoder: Decoder): Visibility {
                val decoded = decoder.decodeString()
                return values().first { it.value == decoded }
            }

            override val descriptor: SerialDescriptor
                get() = PrimitiveSerialDescriptor(
                    "InlineObject21ApiModel.Visibility.Serializer",
                    PrimitiveKind.STRING
                )

            override fun serialize(encoder: Encoder, value: Visibility) {
                return encoder.encodeString(value.value)
            }
        }
    }
}

