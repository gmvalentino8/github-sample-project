/**
 * GitHub v3 REST API
 *
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package jp.co.yumemi.android.code_check.remote.models

import jp.co.yumemi.android.code_check.remote.models.CodeMinusScanningMinusAlertMinusClassificationApiModel
import jp.co.yumemi.android.code_check.remote.models.CodeMinusScanningMinusAlertMinusLocationApiModel
import jp.co.yumemi.android.code_check.remote.models.CodeMinusScanningMinusAlertMinusStateApiModel
import jp.co.yumemi.android.code_check.remote.models.CodeScanningAlertInstanceMessageApiModel

import kotlinx.serialization.*

/**
 * 
 * @param ref The full Git reference, formatted as `refs/heads/<branch name>`, `refs/pull/<number>/merge`, or `refs/pull/<number>/head`.
 * @param analysisKey Identifies the configuration under which the analysis was executed. For example, in GitHub Actions this includes the workflow filename and job name.
 * @param environment Identifies the variable values associated with the environment in which the analysis that generated this alert instance was performed, such as the language that was analyzed.
 * @param category Identifies the configuration under which the analysis was executed. Used to distinguish between multiple analyses for the same tool and commit, but performed on different languages or different parts of the code.
 * @param state 
 * @param commitSha 
 * @param message 
 * @param location 
 * @param htmlUrl 
 * @param classifications Classifications that have been applied to the file that triggered the alert. For example identifying it as documentation, or a generated file.
 */
@Serializable
data class CodeMinusScanningMinusAlertMinusInstanceApiModel(
    /* The full Git reference, formatted as `refs/heads/<branch name>`, `refs/pull/<number>/merge`, or `refs/pull/<number>/head`. */
    @SerialName(value = "ref")
    val ref: kotlin.String? = null,
    /* Identifies the configuration under which the analysis was executed. For example, in GitHub Actions this includes the workflow filename and job name. */
    @SerialName(value = "analysis_key")
    val analysisKey: kotlin.String? = null,
    /* Identifies the variable values associated with the environment in which the analysis that generated this alert instance was performed, such as the language that was analyzed. */
    @SerialName(value = "environment")
    val environment: kotlin.String? = null,
    /* Identifies the configuration under which the analysis was executed. Used to distinguish between multiple analyses for the same tool and commit, but performed on different languages or different parts of the code. */
    @SerialName(value = "category")
    val category: kotlin.String? = null,
    @Contextual @SerialName(value = "state")
    val state: CodeMinusScanningMinusAlertMinusStateApiModel? = null,
    @SerialName(value = "commit_sha")
    val commitSha: kotlin.String? = null,
    @SerialName(value = "message")
    val message: CodeScanningAlertInstanceMessageApiModel? = null,
    @SerialName(value = "location")
    val location: CodeMinusScanningMinusAlertMinusLocationApiModel? = null,
    @SerialName(value = "html_url")
    val htmlUrl: kotlin.String? = null,
    /* Classifications that have been applied to the file that triggered the alert. For example identifying it as documentation, or a generated file. */
    @SerialName(value = "classifications")
    val classifications: kotlin.collections.List<@Contextual CodeMinusScanningMinusAlertMinusClassificationApiModel>? = null
) {

}

