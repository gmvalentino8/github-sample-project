/**
 * GitHub v3 REST API
 *
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package jp.co.yumemi.android.code_check.remote.models


import kotlinx.serialization.*
import kotlinx.serialization.descriptors.PrimitiveKind
import kotlinx.serialization.descriptors.PrimitiveSerialDescriptor
import kotlinx.serialization.descriptors.SerialDescriptor
import kotlinx.serialization.encoding.Decoder
import kotlinx.serialization.encoding.Encoder

/**
 * 
 * @param status The phase of the lifecycle that the job is currently in.
 * @param conclusion The outcome of the job.
 * @param name The name of the job.
 * @param number 
 * @param startedAt The time that the step started, in ISO 8601 format.
 * @param completedAt The time that the job finished, in ISO 8601 format.
 */
@Serializable
data class JobStepsApiModel(
    /* The phase of the lifecycle that the job is currently in. */
    @SerialName(value = "status")
    val status: JobStepsApiModel.Status,
    /* The outcome of the job. */
    @SerialName(value = "conclusion")
    val conclusion: kotlin.String?,
    /* The name of the job. */
    @SerialName(value = "name")
    val name: kotlin.String,
    @SerialName(value = "number")
    val number: kotlin.Int,
    /* The time that the step started, in ISO 8601 format. */
    @SerialName(value = "started_at")
    val startedAt: kotlin.String? = null,
    /* The time that the job finished, in ISO 8601 format. */
    @SerialName(value = "completed_at")
    val completedAt: kotlin.String? = null
) {

    /**
     * The phase of the lifecycle that the job is currently in.
     * Values: queued,inProgress,completed
     */
    @Serializable(with = Status.Serializer::class)
    enum class Status(val value: kotlin.String) {
        queued("queued"),
        inProgress("in_progress"),
        completed("completed");

        @kotlinx.serialization.Serializer(forClass = Status::class)
        object Serializer {
            override fun deserialize(decoder: Decoder): Status {
                val decoded = decoder.decodeString()
                return values().first { it.value == decoded }
            }

            override val descriptor: SerialDescriptor
                get() = PrimitiveSerialDescriptor(
                    "JobStepsApiModel.Status.Serializer",
                    PrimitiveKind.STRING
                )

            override fun serialize(encoder: Encoder, value: Status) {
                return encoder.encodeString(value.value)
            }
        }
    }
}

