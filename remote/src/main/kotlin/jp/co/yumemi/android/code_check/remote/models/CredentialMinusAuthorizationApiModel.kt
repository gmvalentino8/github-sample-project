/**
 * GitHub v3 REST API
 *
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package jp.co.yumemi.android.code_check.remote.models


import kotlinx.serialization.*

/**
 * Credential Authorization
 * @param login User login that owns the underlying credential.
 * @param credentialId Unique identifier for the credential.
 * @param credentialType Human-readable description of the credential type.
 * @param credentialAuthorizedAt Date when the credential was authorized for use.
 * @param credentialAccessedAt Date when the credential was last accessed. May be null if it was never accessed
 * @param authorizedCredentialId 
 * @param tokenLastEight Last eight characters of the credential. Only included in responses with credential_type of personal access token.
 * @param scopes List of oauth scopes the token has been granted.
 * @param fingerprint Unique string to distinguish the credential. Only included in responses with credential_type of SSH Key.
 * @param authorizedCredentialTitle The title given to the ssh key. This will only be present when the credential is an ssh key.
 * @param authorizedCredentialNote The note given to the token. This will only be present when the credential is a token.
 * @param authorizedCredentialExpiresAt The expiry for the token. This will only be present when the credential is a token.
 */
@Serializable
data class CredentialMinusAuthorizationApiModel(
    /* User login that owns the underlying credential. */
    @SerialName(value = "login")
    val login: kotlin.String,
    /* Unique identifier for the credential. */
    @SerialName(value = "credential_id")
    val credentialId: kotlin.Int,
    /* Human-readable description of the credential type. */
    @SerialName(value = "credential_type")
    val credentialType: kotlin.String,
    /* Date when the credential was authorized for use. */
    @SerialName(value = "credential_authorized_at")
    val credentialAuthorizedAt: kotlin.String,
    /* Date when the credential was last accessed. May be null if it was never accessed */
    @SerialName(value = "credential_accessed_at")
    val credentialAccessedAt: kotlin.String?,
    @SerialName(value = "authorized_credential_id")
    val authorizedCredentialId: kotlin.Int?,
    /* Last eight characters of the credential. Only included in responses with credential_type of personal access token. */
    @SerialName(value = "token_last_eight")
    val tokenLastEight: kotlin.String? = null,
    /* List of oauth scopes the token has been granted. */
    @SerialName(value = "scopes")
    val scopes: kotlin.collections.List<kotlin.String>? = null,
    /* Unique string to distinguish the credential. Only included in responses with credential_type of SSH Key. */
    @SerialName(value = "fingerprint")
    val fingerprint: kotlin.String? = null,
    /* The title given to the ssh key. This will only be present when the credential is an ssh key. */
    @SerialName(value = "authorized_credential_title")
    val authorizedCredentialTitle: kotlin.String? = null,
    /* The note given to the token. This will only be present when the credential is a token. */
    @SerialName(value = "authorized_credential_note")
    val authorizedCredentialNote: kotlin.String? = null,
    /* The expiry for the token. This will only be present when the credential is a token. */
    @SerialName(value = "authorized_credential_expires_at")
    val authorizedCredentialExpiresAt: kotlin.String? = null
) {

}

