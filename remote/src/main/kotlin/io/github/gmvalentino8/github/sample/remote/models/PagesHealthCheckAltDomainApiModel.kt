/**
 * GitHub v3 REST API
 *
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package io.github.gmvalentino8.github.sample.remote.models


import kotlinx.serialization.*

/**
 * 
 * @param host 
 * @param uri 
 * @param nameservers 
 * @param dnsResolves 
 * @param isProxied 
 * @param isCloudflareIp 
 * @param isFastlyIp 
 * @param isOldIpAddress 
 * @param isARecord 
 * @param hasCnameRecord 
 * @param hasMxRecordsPresent 
 * @param isValidDomain 
 * @param isApexDomain 
 * @param shouldBeARecord 
 * @param isCnameToGithubUserDomain 
 * @param isCnameToPagesDotGithubDotCom 
 * @param isCnameToFastly 
 * @param isPointedToGithubPagesIp 
 * @param isNonGithubPagesIpPresent 
 * @param isPagesDomain 
 * @param isServedByPages 
 * @param isValid 
 * @param reason 
 * @param respondsToHttps 
 * @param enforcesHttps 
 * @param httpsError 
 * @param isHttpsEligible 
 * @param caaError 
 */
@Serializable
data class PagesHealthCheckAltDomainApiModel(
    @SerialName(value = "host")
    val host: kotlin.String? = null,
    @SerialName(value = "uri")
    val uri: kotlin.String? = null,
    @SerialName(value = "nameservers")
    val nameservers: kotlin.String? = null,
    @SerialName(value = "dns_resolves")
    val dnsResolves: kotlin.Boolean? = null,
    @SerialName(value = "is_proxied")
    val isProxied: kotlin.Boolean? = null,
    @SerialName(value = "is_cloudflare_ip")
    val isCloudflareIp: kotlin.Boolean? = null,
    @SerialName(value = "is_fastly_ip")
    val isFastlyIp: kotlin.Boolean? = null,
    @SerialName(value = "is_old_ip_address")
    val isOldIpAddress: kotlin.Boolean? = null,
    @SerialName(value = "is_a_record")
    val isARecord: kotlin.Boolean? = null,
    @SerialName(value = "has_cname_record")
    val hasCnameRecord: kotlin.Boolean? = null,
    @SerialName(value = "has_mx_records_present")
    val hasMxRecordsPresent: kotlin.Boolean? = null,
    @SerialName(value = "is_valid_domain")
    val isValidDomain: kotlin.Boolean? = null,
    @SerialName(value = "is_apex_domain")
    val isApexDomain: kotlin.Boolean? = null,
    @SerialName(value = "should_be_a_record")
    val shouldBeARecord: kotlin.Boolean? = null,
    @SerialName(value = "is_cname_to_github_user_domain")
    val isCnameToGithubUserDomain: kotlin.Boolean? = null,
    @SerialName(value = "is_cname_to_pages_dot_github_dot_com")
    val isCnameToPagesDotGithubDotCom: kotlin.Boolean? = null,
    @SerialName(value = "is_cname_to_fastly")
    val isCnameToFastly: kotlin.Boolean? = null,
    @SerialName(value = "is_pointed_to_github_pages_ip")
    val isPointedToGithubPagesIp: kotlin.Boolean? = null,
    @SerialName(value = "is_non_github_pages_ip_present")
    val isNonGithubPagesIpPresent: kotlin.Boolean? = null,
    @SerialName(value = "is_pages_domain")
    val isPagesDomain: kotlin.Boolean? = null,
    @SerialName(value = "is_served_by_pages")
    val isServedByPages: kotlin.Boolean? = null,
    @SerialName(value = "is_valid")
    val isValid: kotlin.Boolean? = null,
    @SerialName(value = "reason")
    val reason: kotlin.String? = null,
    @SerialName(value = "responds_to_https")
    val respondsToHttps: kotlin.Boolean? = null,
    @SerialName(value = "enforces_https")
    val enforcesHttps: kotlin.Boolean? = null,
    @SerialName(value = "https_error")
    val httpsError: kotlin.String? = null,
    @SerialName(value = "is_https_eligible")
    val isHttpsEligible: kotlin.Boolean? = null,
    @SerialName(value = "caa_error")
    val caaError: kotlin.String? = null
) {

}

