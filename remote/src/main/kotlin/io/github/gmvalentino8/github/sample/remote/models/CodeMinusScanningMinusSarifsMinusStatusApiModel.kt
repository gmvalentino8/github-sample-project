/**
 * GitHub v3 REST API
 *
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package io.github.gmvalentino8.github.sample.remote.models


import kotlinx.serialization.*
import kotlinx.serialization.descriptors.PrimitiveKind
import kotlinx.serialization.descriptors.PrimitiveSerialDescriptor
import kotlinx.serialization.descriptors.SerialDescriptor
import kotlinx.serialization.encoding.Decoder
import kotlinx.serialization.encoding.Encoder

/**
 * 
 * @param processingStatus `pending` files have not yet been processed, while `complete` means results from the SARIF have been stored. `failed` files have either not been processed at all, or could only be partially processed.
 * @param analysesUrl The REST API URL for getting the analyses associated with the upload.
 * @param errors Any errors that ocurred during processing of the delivery.
 */
@Serializable
data class CodeMinusScanningMinusSarifsMinusStatusApiModel(
    /* `pending` files have not yet been processed, while `complete` means results from the SARIF have been stored. `failed` files have either not been processed at all, or could only be partially processed. */
    @SerialName(value = "processing_status")
    val processingStatus: CodeMinusScanningMinusSarifsMinusStatusApiModel.ProcessingStatus? = null,
    /* The REST API URL for getting the analyses associated with the upload. */
    @SerialName(value = "analyses_url")
    val analysesUrl: kotlin.String? = null,
    /* Any errors that ocurred during processing of the delivery. */
    @SerialName(value = "errors")
    val errors: kotlin.collections.List<kotlin.String>? = null
) {

    /**
     * `pending` files have not yet been processed, while `complete` means results from the SARIF have been stored. `failed` files have either not been processed at all, or could only be partially processed.
     * Values: pending,complete,failed
     */
    @Serializable(with = ProcessingStatus.Serializer::class)
    enum class ProcessingStatus(val value: kotlin.String) {
        pending("pending"),
        complete("complete"),
        failed("failed");

        @kotlinx.serialization.Serializer(forClass = ProcessingStatus::class)
        object Serializer {
            override fun deserialize(decoder: Decoder): ProcessingStatus {
                val decoded = decoder.decodeString()
                return values().first { it.value == decoded }
            }

            override val descriptor: SerialDescriptor
                get() = PrimitiveSerialDescriptor(
                    "CodeMinusScanningMinusSarifsMinusStatusApiModel.ProcessingStatus.Serializer",
                    PrimitiveKind.STRING
                )

            override fun serialize(encoder: Encoder, value: ProcessingStatus) {
                return encoder.encodeString(value.value)
            }
        }
    }
}

