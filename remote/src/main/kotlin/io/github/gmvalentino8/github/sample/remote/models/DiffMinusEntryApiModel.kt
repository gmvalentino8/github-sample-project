/**
 * GitHub v3 REST API
 *
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package io.github.gmvalentino8.github.sample.remote.models


import kotlinx.serialization.*
import kotlinx.serialization.descriptors.PrimitiveKind
import kotlinx.serialization.descriptors.PrimitiveSerialDescriptor
import kotlinx.serialization.descriptors.SerialDescriptor
import kotlinx.serialization.encoding.Decoder
import kotlinx.serialization.encoding.Encoder

/**
 * Diff Entry
 * @param sha 
 * @param filename 
 * @param status 
 * @param additions 
 * @param deletions 
 * @param changes 
 * @param blobUrl 
 * @param rawUrl 
 * @param contentsUrl 
 * @param patch 
 * @param previousFilename 
 */
@Serializable
data class DiffMinusEntryApiModel(
    @SerialName(value = "sha")
    val sha: kotlin.String,
    @SerialName(value = "filename")
    val filename: kotlin.String,
    @SerialName(value = "status")
    val status: DiffMinusEntryApiModel.Status,
    @SerialName(value = "additions")
    val additions: kotlin.Int,
    @SerialName(value = "deletions")
    val deletions: kotlin.Int,
    @SerialName(value = "changes")
    val changes: kotlin.Int,
    @SerialName(value = "blob_url")
    val blobUrl: kotlin.String,
    @SerialName(value = "raw_url")
    val rawUrl: kotlin.String,
    @SerialName(value = "contents_url")
    val contentsUrl: kotlin.String,
    @SerialName(value = "patch")
    val patch: kotlin.String? = null,
    @SerialName(value = "previous_filename")
    val previousFilename: kotlin.String? = null
) {

    /**
     * 
     * Values: added,removed,modified,renamed,copied,changed,unchanged
     */
    @Serializable(with = Status.Serializer::class)
    enum class Status(val value: kotlin.String) {
        added("added"),
        removed("removed"),
        modified("modified"),
        renamed("renamed"),
        copied("copied"),
        changed("changed"),
        unchanged("unchanged");

        @kotlinx.serialization.Serializer(forClass = Status::class)
        object Serializer {
            override fun deserialize(decoder: Decoder): Status {
                val decoded = decoder.decodeString()
                return values().first { it.value == decoded }
            }

            override val descriptor: SerialDescriptor
                get() = PrimitiveSerialDescriptor(
                    "DiffMinusEntryApiModel.Status.Serializer",
                    PrimitiveKind.STRING
                )

            override fun serialize(encoder: Encoder, value: Status) {
                return encoder.encodeString(value.value)
            }
        }
    }
}

