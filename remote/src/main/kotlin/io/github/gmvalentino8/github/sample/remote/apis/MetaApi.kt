/**
 * GitHub v3 REST API
 *
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package io.github.gmvalentino8.github.sample.remote.apis

import io.ktor.client.request.request
import io.github.gmvalentino8.github.sample.remote.models.*
import io.github.gmvalentino8.github.sample.remote.core.HttpClientProvider
import io.ktor.client.request.parameter
import io.ktor.http.HttpMethod

interface MetaApi {
    /**
    * Get GitHub meta information
    *
    * Returns meta information about GitHub, including a list of GitHub&#39;s IP addresses. For more information, see \&quot;[About GitHub&#39;s IP addresses](https://docs.github.com/articles/about-github-s-ip-addresses/).\&quot;  **Note:** The IP addresses shown in the documentation&#39;s response are only example values. You must always query the API directly to get the latest list of IP addresses.
    *
    * @return ApiMinusOverviewApiModel
    */
    suspend fun metaGet(accessToken: String? = null): ApiMinusOverviewApiModel

    /**
    * Get Octocat
    *
    * Get the octocat as ASCII art
    *
    * @return kotlin.String
    */
    suspend fun metaGetOctocat(accessToken: String? = null, s: kotlin.String? = null): kotlin.String

    /**
    * Get the Zen of GitHub
    *
    * Get a random sentence from the Zen of GitHub
    *
    * @return kotlin.String
    */
    suspend fun metaGetZen(accessToken: String? = null): kotlin.String

    /**
    * GitHub API Root
    *
    * Get Hypermedia links to resources accessible in GitHub&#39;s REST API
    *
    * @return InlineResponse200ApiModel
    */
    suspend fun metaRoot(accessToken: String? = null): InlineResponse200ApiModel

}

class HttpClientMetaApi(private val httpClientProvider: HttpClientProvider) : MetaApi {
    internal val httpClient = httpClientProvider.provide()

    override suspend fun metaGet(accessToken: String?): ApiMinusOverviewApiModel {
        val path = "/meta"

        return httpClient.request {
            url { encodedPath = path }
            method = HttpMethod.Get
        }
    }

    override suspend fun metaGetOctocat(accessToken: String?, s: kotlin.String?): kotlin.String {
        val path = "/octocat"

        return httpClient.request {
            url { encodedPath = path }
            method = HttpMethod.Get
            parameter("s", s)
        }
    }

    override suspend fun metaGetZen(accessToken: String?): kotlin.String {
        val path = "/zen"

        return httpClient.request {
            url { encodedPath = path }
            method = HttpMethod.Get
        }
    }

    override suspend fun metaRoot(accessToken: String?): InlineResponse200ApiModel {
        val path = "/"

        return httpClient.request {
            url { encodedPath = path }
            method = HttpMethod.Get
        }
    }

}
