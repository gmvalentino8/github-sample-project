/**
 * GitHub v3 REST API
 *
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package io.github.gmvalentino8.github.sample.remote.apis

import io.ktor.client.request.request
import io.github.gmvalentino8.github.sample.remote.models.*
import io.github.gmvalentino8.github.sample.remote.core.HttpClientProvider
import io.ktor.client.request.parameter
import io.ktor.http.HttpMethod

interface EmojisApi {
    /**
    * Get emojis
    *
    * Lists all the emojis available to use on GitHub.
    *
    * @return kotlin.collections.Map<kotlin.String, kotlin.String>
    */
    suspend fun emojisGet(accessToken: String? = null): kotlin.collections.Map<kotlin.String, kotlin.String>

}

class HttpClientEmojisApi(private val httpClientProvider: HttpClientProvider) : EmojisApi {
    internal val httpClient = httpClientProvider.provide()

    override suspend fun emojisGet(accessToken: String?): kotlin.collections.Map<kotlin.String, kotlin.String> {
        val path = "/emojis"

        return httpClient.request {
            url { encodedPath = path }
            method = HttpMethod.Get
        }
    }

}
