/**
 * GitHub v3 REST API
 *
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package io.github.gmvalentino8.github.sample.remote.models

import io.github.gmvalentino8.github.sample.remote.models.ReposRepoNameGitTagsTaggerApiModel

import kotlinx.serialization.*
import kotlinx.serialization.descriptors.PrimitiveKind
import kotlinx.serialization.descriptors.PrimitiveSerialDescriptor
import kotlinx.serialization.descriptors.SerialDescriptor
import kotlinx.serialization.encoding.Decoder
import kotlinx.serialization.encoding.Encoder

/**
 * 
 * @param tag The tag's name. This is typically a version (e.g., \"v0.0.1\").
 * @param message The tag message.
 * @param `object` The SHA of the git object this is tagging.
 * @param type The type of the object we're tagging. Normally this is a `commit` but it can also be a `tree` or a `blob`.
 * @param tagger 
 */
@Serializable
data class InlineObject89ApiModel(
    /* The tag's name. This is typically a version (e.g., \"v0.0.1\"). */
    @SerialName(value = "tag")
    val tag: kotlin.String,
    /* The tag message. */
    @SerialName(value = "message")
    val message: kotlin.String,
    /* The SHA of the git object this is tagging. */
    @SerialName(value = "object")
    val `object`: kotlin.String,
    /* The type of the object we're tagging. Normally this is a `commit` but it can also be a `tree` or a `blob`. */
    @SerialName(value = "type")
    val type: InlineObject89ApiModel.Type,
    @SerialName(value = "tagger")
    val tagger: ReposRepoNameGitTagsTaggerApiModel? = null
) {

    /**
     * The type of the object we're tagging. Normally this is a `commit` but it can also be a `tree` or a `blob`.
     * Values: commit,tree,blob
     */
    @Serializable(with = Type.Serializer::class)
    enum class Type(val value: kotlin.String) {
        commit("commit"),
        tree("tree"),
        blob("blob");

        @kotlinx.serialization.Serializer(forClass = Type::class)
        object Serializer {
            override fun deserialize(decoder: Decoder): Type {
                val decoded = decoder.decodeString()
                return values().first { it.value == decoded }
            }

            override val descriptor: SerialDescriptor
                get() = PrimitiveSerialDescriptor(
                    "InlineObject89ApiModel.Type.Serializer",
                    PrimitiveKind.STRING
                )

            override fun serialize(encoder: Encoder, value: Type) {
                return encoder.encodeString(value.value)
            }
        }
    }
}

