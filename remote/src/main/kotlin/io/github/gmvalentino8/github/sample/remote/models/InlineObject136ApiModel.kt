/**
 * GitHub v3 REST API
 *
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package io.github.gmvalentino8.github.sample.remote.models


import kotlinx.serialization.*
import kotlinx.serialization.descriptors.PrimitiveKind
import kotlinx.serialization.descriptors.PrimitiveSerialDescriptor
import kotlinx.serialization.descriptors.SerialDescriptor
import kotlinx.serialization.encoding.Decoder
import kotlinx.serialization.encoding.Encoder

/**
 * 
 * @param state The state of the status. Can be one of `error`, `failure`, `pending`, or `success`.
 * @param targetUrl The target URL to associate with this status. This URL will be linked from the GitHub UI to allow users to easily see the source of the status.   For example, if your continuous integration system is posting build status, you would want to provide the deep link for the build output for this specific SHA:   `http://ci.example.com/user/repo/build/sha`
 * @param description A short description of the status.
 * @param context A string label to differentiate this status from the status of other systems. This field is case-insensitive.
 */
@Serializable
data class InlineObject136ApiModel(
    /* The state of the status. Can be one of `error`, `failure`, `pending`, or `success`. */
    @SerialName(value = "state")
    val state: InlineObject136ApiModel.State,
    /* The target URL to associate with this status. This URL will be linked from the GitHub UI to allow users to easily see the source of the status.   For example, if your continuous integration system is posting build status, you would want to provide the deep link for the build output for this specific SHA:   `http://ci.example.com/user/repo/build/sha` */
    @SerialName(value = "target_url")
    val targetUrl: kotlin.String? = null,
    /* A short description of the status. */
    @SerialName(value = "description")
    val description: kotlin.String? = null,
    /* A string label to differentiate this status from the status of other systems. This field is case-insensitive. */
    @SerialName(value = "context")
    val context: kotlin.String? = "default"
) {

    /**
     * The state of the status. Can be one of `error`, `failure`, `pending`, or `success`.
     * Values: error,failure,pending,success
     */
    @Serializable(with = State.Serializer::class)
    enum class State(val value: kotlin.String) {
        error("error"),
        failure("failure"),
        pending("pending"),
        success("success");

        @kotlinx.serialization.Serializer(forClass = State::class)
        object Serializer {
            override fun deserialize(decoder: Decoder): State {
                val decoded = decoder.decodeString()
                return values().first { it.value == decoded }
            }

            override val descriptor: SerialDescriptor
                get() = PrimitiveSerialDescriptor(
                    "InlineObject136ApiModel.State.Serializer",
                    PrimitiveKind.STRING
                )

            override fun serialize(encoder: Encoder, value: State) {
                return encoder.encodeString(value.value)
            }
        }
    }
}

