/**
 * GitHub v3 REST API
 *
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package io.github.gmvalentino8.github.sample.remote.models


import kotlinx.serialization.*
import kotlinx.serialization.descriptors.PrimitiveKind
import kotlinx.serialization.descriptors.PrimitiveSerialDescriptor
import kotlinx.serialization.descriptors.SerialDescriptor
import kotlinx.serialization.encoding.Decoder
import kotlinx.serialization.encoding.Encoder

/**
 * 
 * @param vcsUrl The URL of the originating repository.
 * @param vcs The originating VCS type. Can be one of `subversion`, `git`, `mercurial`, or `tfvc`. Please be aware that without this parameter, the import job will take additional time to detect the VCS type before beginning the import. This detection step will be reflected in the response.
 * @param vcsUsername If authentication is required, the username to provide to `vcs_url`.
 * @param vcsPassword If authentication is required, the password to provide to `vcs_url`.
 * @param tfvcProject For a tfvc import, the name of the project that is being imported.
 */
@Serializable
data class InlineObject94ApiModel(
    /* The URL of the originating repository. */
    @SerialName(value = "vcs_url")
    val vcsUrl: kotlin.String,
    /* The originating VCS type. Can be one of `subversion`, `git`, `mercurial`, or `tfvc`. Please be aware that without this parameter, the import job will take additional time to detect the VCS type before beginning the import. This detection step will be reflected in the response. */
    @SerialName(value = "vcs")
    val vcs: InlineObject94ApiModel.Vcs? = null,
    /* If authentication is required, the username to provide to `vcs_url`. */
    @SerialName(value = "vcs_username")
    val vcsUsername: kotlin.String? = null,
    /* If authentication is required, the password to provide to `vcs_url`. */
    @SerialName(value = "vcs_password")
    val vcsPassword: kotlin.String? = null,
    /* For a tfvc import, the name of the project that is being imported. */
    @SerialName(value = "tfvc_project")
    val tfvcProject: kotlin.String? = null
) {

    /**
     * The originating VCS type. Can be one of `subversion`, `git`, `mercurial`, or `tfvc`. Please be aware that without this parameter, the import job will take additional time to detect the VCS type before beginning the import. This detection step will be reflected in the response.
     * Values: subversion,git,mercurial,tfvc
     */
    @Serializable(with = Vcs.Serializer::class)
    enum class Vcs(val value: kotlin.String) {
        subversion("subversion"),
        git("git"),
        mercurial("mercurial"),
        tfvc("tfvc");

        @kotlinx.serialization.Serializer(forClass = Vcs::class)
        object Serializer {
            override fun deserialize(decoder: Decoder): Vcs {
                val decoded = decoder.decodeString()
                return values().first { it.value == decoded }
            }

            override val descriptor: SerialDescriptor
                get() = PrimitiveSerialDescriptor(
                    "InlineObject94ApiModel.Vcs.Serializer",
                    PrimitiveKind.STRING
                )

            override fun serialize(encoder: Encoder, value: Vcs) {
                return encoder.encodeString(value.value)
            }
        }
    }
}

