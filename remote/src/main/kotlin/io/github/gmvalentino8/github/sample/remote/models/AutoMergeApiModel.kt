/**
 * GitHub v3 REST API
 *
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package io.github.gmvalentino8.github.sample.remote.models

import io.github.gmvalentino8.github.sample.remote.models.SimpleMinusUserApiModel

import kotlinx.serialization.*
import kotlinx.serialization.descriptors.PrimitiveKind
import kotlinx.serialization.descriptors.PrimitiveSerialDescriptor
import kotlinx.serialization.descriptors.SerialDescriptor
import kotlinx.serialization.encoding.Decoder
import kotlinx.serialization.encoding.Encoder

/**
 * The status of auto merging a pull request.
 * @param enabledBy 
 * @param mergeMethod The merge method to use.
 * @param commitTitle Title for the merge commit message.
 * @param commitMessage Commit message for the merge commit.
 */
@Serializable
data class AutoMergeApiModel(
    @SerialName(value = "enabled_by")
    val enabledBy: SimpleMinusUserApiModel,
    /* The merge method to use. */
    @SerialName(value = "merge_method")
    val mergeMethod: AutoMergeApiModel.MergeMethod,
    /* Title for the merge commit message. */
    @SerialName(value = "commit_title")
    val commitTitle: kotlin.String,
    /* Commit message for the merge commit. */
    @SerialName(value = "commit_message")
    val commitMessage: kotlin.String
) {

    /**
     * The merge method to use.
     * Values: merge,squash,rebase
     */
    @Serializable(with = MergeMethod.Serializer::class)
    enum class MergeMethod(val value: kotlin.String) {
        merge("merge"),
        squash("squash"),
        rebase("rebase");

        @kotlinx.serialization.Serializer(forClass = MergeMethod::class)
        object Serializer {
            override fun deserialize(decoder: Decoder): MergeMethod {
                val decoded = decoder.decodeString()
                return values().first { it.value == decoded }
            }

            override val descriptor: SerialDescriptor
                get() = PrimitiveSerialDescriptor(
                    "AutoMergeApiModel.MergeMethod.Serializer",
                    PrimitiveKind.STRING
                )

            override fun serialize(encoder: Encoder, value: MergeMethod) {
                return encoder.encodeString(value.value)
            }
        }
    }
}

